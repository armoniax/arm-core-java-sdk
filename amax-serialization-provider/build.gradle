buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id "signing"
}

group 'io.github.armoniax'
version '1.0.0-SNAPSHOT'

String platformName;
String osName = System.getProperty("os.name").toLowerCase();
String archName = System.getProperty("os.arch");

if (osName.contains("win")) {
    platformName = "win-" + archName;
} else if (osName.contains("mac")) {
    platformName = "mac-" + archName;
} else if (osName.contains("nux")) {
    platformName = "linux-" + archName;
} else {
    platformName = "unknown-"  + archName;
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation fileTree(include: ['*.jar', "*.dylib", "*.so"], dir: 'libs')
    api 'org.bouncycastle:bcprov-jdk15on:1.61'
    testImplementation 'io.github.armoniax:amax4j:1.0.0-SNAPSHOT'
    testImplementation 'com.google.code.gson:gson:2.8.5'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'org.json', name: 'json', version: '20200518'
    implementation 'org.jetbrains:annotations:17.0.0'
    compileOnly 'io.github.armoniax:amax4j:1.0.0-SNAPSHOT'
    testCompileOnly 'io.github.armoniax:amax4j:1.0.0-SNAPSHOT'
}

jar {
    archiveFileName = 'amax-serialization-provider-'+ project.version + '-' + platformName + '.jar'
    dependsOn 'copyNativeLibrary'
    // Copy lib file before jar is created
    from('amaxabi/build/lib/main/release') {
        include '**/*.so'
        include '**/*.dll'
        include '**/*.dylib'
        into('amaxabi/build/lib/main/release')
    }
}

task copyNativeLibrary(type: Copy) {
    dependsOn ':amaxabi:linkRelease'
    // Copy lib to /resources so tests can run within project (outside of gradle task)
    from ('amaxabi/build/lib/main/release') {
        include '**/*.so'
        include '**/*.dll'
        include '**/*.dylib'
    }
    into 'src/main/resources/amaxabi/build/lib/main/release'
}

task deleteCopiedNativeLibrary(type: Delete) {
    delete fileTree(include: ["*.dylib", "*.so","*.dll"], dir: 'src/main/resources/amaxabi/build/lib/main/release')
}

clean.dependsOn 'deleteCopiedNativeLibrary'


//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            groupId project.group
//            artifactId project.name
//            version project.version
//
//            from components.java
//            pom {
//                name = 'amax4j'
//                description = "Armonia RealMe Account Core Java SDK"
//                url = "https://github.com/armoniax/arm-core-java-sdk"
//                licenses {
//                    license {
//                        name = 'MIT License'
//                        url = 'https://mit-license.org/'
//                    }
//                }
//                developers {
//                    developer {
//                        id = "aplink"
//                        name = "APLink Pte. Ltd."
//                        email = "aplink2022@gmail.com"
//                    }
//                }
//                scm {
//                    url = 'https://github.com/armoniax/arm-core-java-sdk'
//                    connection = 'scm:git:https://github.com/armoniax/arm-core-java-sdk.git'
//                    developerConnection = 'scm:git:https://github.com/armoniax/arm-core-java-sdk.git'
//                }
//            }
//        }
//    }
//
//    repositories {
//        maven {
//            name 'sonatypeRepository'
//            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//            credentials {
//                username = "${sonatypeUsername}"
//                password = "${sonatypePassword}"
//            }
//        }
//        maven {
//            name = 'sonatypeSnapshotRepository'
//            url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
//            credentials {
//                username = "${sonatypeUsername}"
//                password = "${sonatypePassword}"
//            }
//        }
//    }
//}
//
//signing {
//    sign publishing.publications.mavenJava
//}

