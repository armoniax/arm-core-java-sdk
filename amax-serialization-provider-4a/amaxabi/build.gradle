plugins {
    id 'com.android.library'
    id "maven-publish"
    id "signing"
}

android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
//            version "3.22.1"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        version "3.22.1"
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    lintOptions {
        abortOnError false
    }

    android.libraryVariants.all{
        variant -> variant.outputs.all {
            outputFileName = "amax-serialization-provider-4a@" + PUSH_VERSION + ".aar"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.bouncycastle:bcprov-jdk15on:1.61'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.61'
    implementation 'io.github.armoniax:amax4j:1.0.0-SNAPSHOT'
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompile.classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

//task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//    classifier = 'javadoc'
//    from androidJavadocs.destinationDir
//}
//
//task androidSourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}

publishing {
    repositories {
        repositories {
            maven {
                name 'sonatypeRepository'
                def releasesUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = PUSH_VERSION.toString().endsWith('SNAPSHOT') ? snapshotUrl : releasesUrl

                credentials {
                    username = "${sonatypeUsername}"
                    password = "${sonatypePassword}"
                }
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = 'io.github.armoniax'
            artifactId = rootProject.name
            version = PUSH_VERSION
            pom {
                name = 'amax-serialization-provider'
                description = "Armonia RealMe Account Core Java SDK"
                url = "https://github.com/armoniax/arm-core-java-sdk"
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://mit-license.org/'
                    }
                }
                developers {
                    developer {
                        id = "aplink"
                        name = "APLink Pte. Ltd."
                        email = "aplink2022@gmail.com"
                    }
                }
                scm {
                    url = 'https://github.com/armoniax/arm-core-java-sdk'
                    connection = 'scm:git:https://github.com/armoniax/arm-core-java-sdk.git'
                    developerConnection = 'scm:git:https://github.com/armoniax/arm-core-java-sdk.git'
                }
                artifact "./build/outputs/aar/amax-serialization-provider-4a@${PUSH_VERSION}.aar"
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}
